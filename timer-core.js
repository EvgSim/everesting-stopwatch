// timer-core.js - –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ç–∞–π–º–µ—Ä–∞

// –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤ —á—á:–º–º:—Å—Å
function formatTime(ms) {
    const hours = Math.floor(ms / 3600000);
    const minutes = Math.floor((ms % 3600000) / 60000);
    const seconds = Math.floor((ms % 60000) / 1000);
    
    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
}

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∏—Å–ø–ª–µ–µ–≤ –≤—Ä–µ–º–µ–Ω–∏
function updateDisplays() {
    const now = Date.now();
    
    if (isRunning) {
        totalElapsed = now - startTime;
        
        if (!isPaused) {
            // –ë–µ–∑ –ø–∞—É–∑—ã - –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ
            lapElapsed = now - lapStartTime - currentLapPause;
        } else {
            // –í–æ –≤—Ä–µ–º—è –ø–∞—É–∑—ã - –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–±—â–µ–µ –≤—Ä–µ–º—è –∏ –ø–∞—É–∑—É —Ç–µ–∫—É—â–µ–≥–æ –∫—Ä—É–≥–∞
            // –í—Ä–µ–º—è –∫—Ä—É–≥–∞ –ù–ï –æ–±–Ω–æ–≤–ª—è–µ–º (–æ–Ω–æ –∑–∞–º–æ—Ä–∞–∂–∏–≤–∞–µ—Ç—Å—è)
            currentLapPause = now - pauseStartTime;
        }
        
        // –û–±—â–µ–µ –≤—Ä–µ–º—è –≤—Å–µ—Ö –ø–∞—É–∑ (–¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Ä–∞—Å—á–µ—Ç–æ–≤)
        totalPauseElapsed = lapsData.reduce((sum, lap) => sum + lap.pauseTime, 0) + currentLapPause;
    }
    
    if (document.getElementById('total-time')) {
        document.getElementById('total-time').textContent = formatTime(totalElapsed);
        document.getElementById('lap-time').textContent = formatTime(lapElapsed);
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞—É–∑—É –¢–û–õ–¨–ö–û —Ç–µ–∫—É—â–µ–≥–æ –∫—Ä—É–≥–∞
        document.getElementById('pause-time').textContent = formatTime(currentLapPause);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–≥–æ –∫—Ä—É–≥–∞ (0 –¥–æ —Å—Ç–∞—Ä—Ç–∞, –∑–∞—Ç–µ–º 1,2,3...)
        const currentLapDisplay = isRunning ? (lapCount + 1) : 0;
        document.getElementById('current-lap').textContent = currentLapDisplay;
    }
}
    
    if (document.getElementById('total-time')) {
        document.getElementById('total-time').textContent = formatTime(totalElapsed);
        document.getElementById('lap-time').textContent = formatTime(lapElapsed);
        document.getElementById('pause-time').textContent = formatTime(totalPauseElapsed);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–≥–æ –∫—Ä—É–≥–∞ (0 –¥–æ —Å—Ç–∞—Ä—Ç–∞, –∑–∞—Ç–µ–º 1,2,3...)
        const currentLapDisplay = isRunning ? (lapCount + 1) : 0;
        document.getElementById('current-lap').textContent = currentLapDisplay;
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–æ–≤
function startTimers() {
    const now = Date.now();
    
    if (!isRunning) {
        // –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
        startTime = now;
        lapStartTime = now;
        isRunning = true;
        lapCount = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∫—Ä—É–≥–æ–≤ –ø—Ä–∏ –Ω–æ–≤–æ–º —Å—Ç–∞—Ä—Ç–µ
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        document.getElementById('btn-start').style.display = 'inline-block';
        document.getElementById('btn-pause').style.display = 'inline-block';
        document.getElementById('btn-finish').style.display = 'inline-block';
        document.getElementById('btn-reset').style.display = 'none';
        
        // –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        document.getElementById('btn-start').textContent = '–ö—Ä—É–≥';
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
        const instructions = document.querySelector('.instructions');
        const btnInstructions = document.querySelector('.toggle-instructions');
        if (instructions && btnInstructions) {
            if (instructions.style.display === 'block') {
                instructions.style.display = 'none';
                btnInstructions.textContent = '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è';
                btnInstructions.classList.remove('active');
                console.log('‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Å–∫—Ä—ã—Ç–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ');
            }
        }
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤
        document.getElementById('total-status').className = 'status-dot running';
        document.getElementById('lap-status').className = 'status-dot running';
        
        document.getElementById('summary').style.display = 'none';
        
        console.log('‚úÖ –°–µ–∫—É–Ω–¥–æ–º–µ—Ä –∑–∞–ø—É—â–µ–Ω');
    } else {
        // –§–∏–∫—Å–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∫—Ä—É–≥–∞
        recordLap();
        
        // –°–±—Ä–æ—Å –≤—Ä–µ–º–µ–Ω–∏ –∫—Ä—É–≥–∞
        lapStartTime = now;
        lapElapsed = 0;
        currentLapPause = 0;
        
        console.log(`‚úÖ –ö—Ä—É–≥ ${lapCount} –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω`);
    }
    
    clearInterval(totalInterval);
    clearInterval(lapInterval);
    totalInterval = setInterval(updateDisplays, 100);
    lapInterval = setInterval(updateDisplays, 100);
    
    hideIndicator('start');
}

// –§—É–Ω–∫—Ü–∏—è –ø–∞—É–∑—ã/–≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
function togglePause() {
    const now = Date.now();
    
    if (!isPaused) {
        // –í–∫–ª—é—á–∞–µ–º –ø–∞—É–∑—É
        isPaused = true;
        pauseStartTime = now;
        document.getElementById('pause-status').className = 'status-dot paused';
        console.log('‚è∏Ô∏è –ü–∞—É–∑–∞ –≤–∫–ª—é—á–µ–Ω–∞');
    } else {
        // –í—ã–∫–ª—é—á–∞–µ–º –ø–∞—É–∑—É
        isPaused = false;
        currentLapPause += now - pauseStartTime;
        document.getElementById('pause-status').className = 'status-dot stopped';
        console.log('‚ñ∂Ô∏è –ü–∞—É–∑–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞');
    }
    
    hideIndicator('pause');
}

// –§—É–Ω–∫—Ü–∏—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –∫—Ä—É–≥–∞
function recordLap() {
    const now = Date.now();
    
    const lapTimeWithPause = now - lapStartTime;
    const netLapTime = lapTimeWithPause - currentLapPause;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫—Ä—É–≥–∞
    const lapData = {
        lapNumber: lapCount + 1,
        lapTime: lapTimeWithPause,
        pauseTime: currentLapPause,
        netTime: netLapTime,
        totalTime: now - startTime,
        timestamp: new Date()
    };
    
    lapsData.push(lapData);
    lapCount++;
    
    console.log(`üìä –ö—Ä—É–≥ ${lapCount}: –≤—Ä–µ–º—è=${formatTime(lapTimeWithPause)}, –ø–∞—É–∑–∞=${formatTime(currentLapPause)}, —á–∏—Å—Ç–æ–µ=${formatTime(netLapTime)}`);
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É
    const resultsBody = document.getElementById('results-body');
    if (resultsBody) {
        const newRow = resultsBody.insertRow();
        newRow.innerHTML = `
            <td>${lapCount}</td>
            <td class="lap-time">${formatTime(lapTimeWithPause)}</td>
            <td class="pause-time">${formatTime(currentLapPause)}</td>
            <td class="net-time">${formatTime(netLapTime)}</td>
            <td class="total-time">${formatTime(now - startTime)}</td>
        `;
        
        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å–∏ –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –æ—Ç–∫—Ä—ã—Ç–∞
        const tableContainer = document.getElementById('table-container');
        if (tableContainer && tableContainer.style.display !== 'none') {
            tableContainer.scrollTop = tableContainer.scrollHeight;
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–æ–≤
function finishTimers() {
    isRunning = false;
    isPaused = false;
    
    clearInterval(totalInterval);
    clearInterval(lapInterval);
    clearInterval(pauseInterval);
    
    // –§–∏–∫—Å–∞—Ü–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫—Ä—É–≥–∞, –µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –±—ã–ª –∑–∞–ø—É—â–µ–Ω –∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è
    if (lapElapsed > 1000) { // –§–∏–∫—Å–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫—Ä—É–≥ –¥–ª–∏–ª—Å—è –±–æ–ª—å—à–µ 1 —Å–µ–∫—É–Ω–¥—ã
        recordLap();
    }
    
    // –†–∞—Å—á–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤
    calculateSummary();
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤
    document.getElementById('total-status').className = 'status-dot stopped';
    document.getElementById('lap-status').className = 'status-dot stopped';
    document.getElementById('pause-status').className = 'status-dot stopped';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É —Å–±—Ä–æ—Å–∞
    document.getElementById('btn-start').style.display = 'none';
    document.getElementById('btn-pause').style.display = 'none';
    document.getElementById('btn-finish').style.display = 'none';
    document.getElementById('btn-reset').style.display = 'inline-block';
    
    hideIndicator('finish');
    
    console.log('üèÅ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

// –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞
function resetTimers() {
    clearInterval(totalInterval);
    clearInterval(lapInterval);
    clearInterval(pauseInterval);
    clearAllTimeouts();
    
    // –°–±—Ä–æ—Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    startTime = 0;
    lapStartTime = 0;
    pauseStartTime = 0;
    totalElapsed = 0;
    lapElapsed = 0;
    totalPauseElapsed = 0;
    currentLapPause = 0;
    isRunning = false;
    isPaused = false;
    lapCount = 0;
    startClickCount = 0;
    pauseClickCount = 0;
    finishClickCount = 0;
    resetClickCount = 0;
    lapsData = [];
    
    updateDisplays();
    
    // –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü—ã
    const resultsBody = document.getElementById('results-body');
    if (resultsBody) {
        resultsBody.innerHTML = '';
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤
    document.getElementById('total-status').className = 'status-dot stopped';
    document.getElementById('lap-status').className = 'status-dot stopped';
    document.getElementById('pause-status').className = 'status-dot stopped';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É –ø—É—Å–∫
    document.getElementById('btn-start').style.display = 'inline-block';
    document.getElementById('btn-pause').style.display = 'none';
    document.getElementById('btn-finish').style.display = 'none';
    document.getElementById('btn-reset').style.display = 'none';
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
    document.getElementById('btn-start').textContent = '–ü—É—Å–∫';
    
    // –°–∫—Ä—ã—Ç–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    hideAllIndicators();
    document.getElementById('summary').style.display = 'none';
    
    console.log('üîÑ –°–µ–∫—É–Ω–¥–æ–º–µ—Ä —Å–±—Ä–æ—à–µ–Ω');
}

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –∏—Ç–æ–≥–æ–≤
function calculateSummary() {
    if (lapsData.length === 0) {
        console.log('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏—Ç–æ–≥–æ–≤');
        return;
    }
    
    const totalTime = lapsData[lapsData.length - 1].totalTime;
    const totalLaps = lapsData.length;
    
    const totalLapTime = lapsData.reduce((sum, lap) => sum + lap.lapTime, 0);
    const avgLapTime = totalLapTime / totalLaps;
    
    const totalNetTime = lapsData.reduce((sum, lap) => sum + lap.netTime, 0);
    const avgNetTime = totalNetTime / totalLaps;
    
    const lapTimes = lapsData.map(lap => lap.lapTime);
    const maxLapTime = Math.max(...lapTimes);
    const minLapTime = Math.min(...lapTimes);
    
    const pauseCount = lapsData.filter(lap => lap.pauseTime > 0).length;
    const totalPauseTime = lapsData.reduce((sum, lap) => sum + lap.pauseTime, 0);
    const netTotalTime = totalTime - totalPauseTime;
    
    // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è –∏—Ç–æ–≥–æ–≤
    const summaryContent = document.getElementById('summary-content');
    if (summaryContent) {
        summaryContent.innerHTML = `
            <div class="summary-item">
                <span class="summary-label">–û–±—â–µ–µ –≤—Ä–µ–º—è:</span>
                <span class="summary-value">${formatTime(totalTime)}</span>
            </div>
            <div class="summary-item">
                <span class="summary-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä—É–≥–æ–≤:</span>
                <span class="summary-value">${totalLaps}</span>
            </div>
            <div class="summary-item">
                <span class="summary-label">–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –∫—Ä—É–≥–∞:</span>
                <span class="summary-value">${formatTime(avgLapTime)}</span>
            </div>
            <div class="summary-item">
                <span class="summary-label">–°—Ä–µ–¥–Ω–µ–µ —á–∏—Å—Ç–æ–µ –≤—Ä–µ–º—è:</span>
                <span class="summary-value">${formatTime(avgNetTime)}</span>
            </div>
            <div class="summary-item">
                <span class="summary-label">–ú–∞–∫—Å. –≤—Ä–µ–º—è –∫—Ä—É–≥–∞:</span>
                <span class="summary-value">${formatTime(maxLapTime)}</span>
            </div>
            <div class="summary-item">
                <span class="summary-label">–ú–∏–Ω. –≤—Ä–µ–º—è –∫—Ä—É–≥–∞:</span>
                <span class="summary-value">${formatTime(minLapTime)}</span>
            </div>
            <div class="summary-item">
                <span class="summary-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—É–∑:</span>
                <span class="summary-value">${pauseCount}</span>
            </div>
            <div class="summary-item">
                <span class="summary-label">–°—É–º–º–∞—Ä–Ω–æ–µ –≤—Ä–µ–º—è –ø–∞—É–∑:</span>
                <span class="summary-value">${formatTime(totalPauseTime)}</span>
            </div>
            <div class="summary-item">
                <span class="summary-label">–ß–∏—Å—Ç–æ–µ –æ–±—â–µ–µ –≤—Ä–µ–º—è:</span>
                <span class="summary-value">${formatTime(netTotalTime)}</span>
            </div>
        `;
    }
    
    document.getElementById('summary').style.display = 'block';
    console.log('‚úÖ –ò—Ç–æ–≥–∏ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã');
}

// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö —Ç–∞–π–º–µ—Ä–æ–≤
function clearAllTimeouts() {
    clearTimeout(startClickTimer);
    clearTimeout(startIndicatorTimeout);
    clearTimeout(pauseClickTimer);
    clearTimeout(pauseIndicatorTimeout);
    clearTimeout(finishClickTimer);
    clearTimeout(finishIndicatorTimeout);
    clearTimeout(resetClickTimer);
    clearTimeout(resetIndicatorTimeout);
}

// –§—É–Ω–∫—Ü–∏—è —Å–∫—Ä—ã—Ç–∏—è –≤—Å–µ—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤
function hideAllIndicators() {
    hideIndicator('start');
    hideIndicator('pause');
    hideIndicator('finish');
    hideIndicator('reset');
}

// –§—É–Ω–∫—Ü–∏—è —Å–∫—Ä—ã—Ç–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ (–¥–æ–±–∞–≤–ª–µ–Ω–∞ –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã)
function hideIndicator(type) {
    const indicator = document.getElementById(`${type}-indicator`);
    if (indicator) {
        indicator.style.display = 'none';
    }
    window[`${type}ClickCount`] = 0;
}
